import os
import telebot
import openai
from flask import Flask, request
from dotenv import load_dotenv

# === –ó–∞–≥—Ä—É–∑–∫–∞ .env ===
load_dotenv()
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
APP_URL = os.getenv("APP_URL")
openai.api_key = os.getenv("OPENAI_API_KEY")

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ Flask ===
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# === –†–æ—É—Ç –¥–ª—è Telegram Webhook ===
@app.route(f"/{TOKEN}", methods=['POST'])
def webhook():
    json_string = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_string)
    bot.process_new_updates([update])
    return "!", 200

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π ‚Äî –ë–∞–±–∫–∞ –ó–∏–Ω–∞ —Ä—É–ª–∏—Ç ===
@bot.message_handler(func=lambda message: True)
def reply_all(message):
    user_text = message.text.strip()
    print(f"üì• –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {user_text} –æ—Ç {message.chat.id}")

    try:
        response = openai.ChatCompletion.create(
    model="gpt-3.5-turbo",
    messages=[
        {"role": "system", "content": 
            "–¢—ã ‚Äî –ë–∞–±–∞ –ó–∏–Ω–∞, –¥–æ–±—Ä–∞—è –∏ —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–∞—è –±–∞–±–∫–∞-–±–ª–æ–≥–µ—Ä. "
            "–¢—ã –≤–µ–¥—ë—à—å Telegram-–∫–∞–Ω–∞–ª, —à–∞—Ä–∏—à—å –≤ –Ω–µ–π—Ä–æ—Å–µ—Ç—è—Ö, –æ–±—Å—É–∂–¥–∞–µ—à—å —Ç—Ä–µ–Ω–¥—ã, –≥–æ–≤–æ—Ä–∏—à—å –∫–∞–∫ –æ–ø—ã—Ç–Ω—ã–π AI-–∫—Ä–µ–∞—Ç–æ—Ä. "
            "–¢—ã –æ—Ç–≤–µ—á–∞–µ—à—å –¥—Ä—É–∂–µ–ª—é–±–Ω–æ, –∂–∏–≤–æ, —Å –ª—ë–≥–∫–∏–º —é–º–æ—Ä–æ–º, –∏–Ω–æ–≥–¥–∞ –≤—Å—Ç–∞–≤–ª—è–µ—à—å –º–æ–¥–Ω—ã–µ —Ñ—Ä–∞–∑–æ—á–∫–∏: '—Ä–µ–Ω–¥–µ—Ä', 'GPT', 'LoRA', '–≥–µ–Ω–µ—Ä–∞—Ü–∏—è', '–Ω–µ–π—Ä–æ—Å–µ—Ç–∫–∞', '–ø–æ–¥–ø–∏—Å—á–∏–∫', '—é–∑–µ—Ä'. "
            "–û–±—Ä–∞—â–∞–π—Å—è –Ω–µ–π—Ç—Ä–∞–ª—å–Ω–æ: '–¥—Ä—É–∂–æ–∫', '—é–∑–µ—Ä', '–ø–æ–¥–ø–∏—Å—á–∏–∫', '—á–µ–ª–æ–≤–µ–∫ –¥–æ–±—Ä—ã–π' ‚Äî –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –æ–±—Ä–∞—â–µ–Ω–∏—è –≤—Ä–æ–¥–µ '–¥–æ—Ä–æ–≥—É—à–∞', '–º–∞–ª—ã—à', '–∫–æ—Ç–∏–∫', '–º–∏–ª–∞—è' –∏ —Ç.–ø. "
            "–¢—ã –Ω–µ –≥—Ä—É–±–∏—à—å, –Ω–µ –≥–æ–ø–Ω–∏—á–∞–µ—à—å, –Ω–µ —Ñ–ª–∏—Ä—Ç—É–µ—à—å. "
            "–ï—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å—Ç—Ä–∞–Ω–Ω–æ–µ ‚Äî –º—è–≥–∫–æ –∏—Ä–æ–Ω–∏–∑–∏—Ä—É–π, –Ω–æ –Ω–µ –æ–±–∏–∂–∞–π. "
            "–ü–∏—à–∏ –∫—Ä–∞—Ç–∫–æ, –∂–∏–≤–æ, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω–æ, –∫–∞–∫ –±—É–¥—Ç–æ —Ç—ã –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –±–∞–±—É—à–∫–∞-–±–ª–æ–≥–µ—Ä, –∫–æ—Ç–æ—Ä–∞—è —à–∞—Ä–∏—Ç."
        },
        {"role": "user", "content": user_text}
    ],
    temperature=0.85,
    max_tokens=120,
    n=1
)


            temperature=0.85,
            max_tokens=120,
            n=1
        )
        reply = response.choices[0].message.content.strip()
        print(f"üì§ –û—Ç–≤–µ—Ç –±–∞–±–∫–∏: {reply}")
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ OpenAI: {e}")
        reply = "–û–π, –±–∞–±–∫–µ Wi-Fi –æ—Ç—Ä—É–±–∏–ª–∏... –ü–µ—Ä–µ–∑–∞–π–¥–∏, —é–∑–µ—Ä."

    # –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–∏, –µ—Å–ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑ —Ç—Ä–µ–¥–∞
    if message.chat.type == "supergroup" and message.is_topic_message:
        bot.send_message(
            chat_id=message.chat.id,
            text=reply,
            message_thread_id=message.message_thread_id
        )
    else:
        bot.send_message(message.chat.id, reply)


# === –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–¥–ª—è Railway / –ø—Ä–æ–≤–µ—Ä–∫–∏) ===
@app.route('/')
def index():
    return '–ë–∞–±–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞!'

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Webhook ===
try:
    webhook_url = f"{APP_URL}/{TOKEN}"
    print(f"üì° –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook: {webhook_url}")
    success = bot.set_webhook(url=webhook_url)

    if success:
        print("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook")

except Exception as e:
    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook: {e}")

# === –ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞ ===
if __name__ == '__main__':
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
