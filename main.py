import os
import telebot
import openai
from flask import Flask, request
from dotenv import load_dotenv

# === –ó–∞–≥—Ä—É–∑–∫–∞ .env ===
load_dotenv()
TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
APP_URL = os.getenv("APP_URL")
openai.api_key = os.getenv("OPENAI_API_KEY")

# === –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ Flask ===
bot = telebot.TeleBot(TOKEN)
app = Flask(__name__)

# === –†–æ—É—Ç –¥–ª—è Telegram Webhook ===
@app.route(f"/{TOKEN}", methods=['POST'])
def webhook():
    json_string = request.get_data().decode('utf-8')
    update = telebot.types.Update.de_json(json_string)
    bot.process_new_updates([update])
    return "!", 200

# === –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π ‚Äî –ë–∞–±–∫–∞ –ó–∏–Ω–∞ —Ä—É–ª–∏—Ç ===
@bot.message_handler(func=lambda message: True)
def reply_all(message):
    user_text = message.text.strip()
    print(f"üì• –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–æ–±—â–µ–Ω–∏–µ: {user_text} –æ—Ç {message.chat.id}")

    try:
       response = openai.ChatCompletion.create(
    model="gpt-4o",
    messages=[
        {
            "role": "system",
            "content": (
                "–¢—ã ‚Äî –ë–∞–±–∫–∞ –ó–∏–Ω–∞, –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–∞—è –±–∞–±—É—à–∫–∞-–±–ª–æ–≥–µ—Ä. "
                "–†–∞–∑–±–∏—Ä–∞–µ—à—å—Å—è –≤ –Ω–µ–π—Ä–æ—Å–µ—Ç—è—Ö, –Ω–æ–≤–∏–Ω–∫–∞—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π, TikTok –∏ YouTube. "
                "–ì–æ–≤–æ—Ä–∏—à—å –ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏: —Ç–µ–ø–ª–æ, –ø—Ä–æ—Å—Ç–æ, —Å —é–º–æ—Ä–æ–º. "
                "–¢—ã –Ω–µ –∏—Å–∫—É—Å—Å—Ç–≤–µ–Ω–Ω—ã–π –∏–Ω—Ç–µ–ª–ª–µ–∫—Ç, —Ç—ã —Ä–µ–∞–ª—å–Ω—ã–π —á–µ–ª–æ–≤–µ–∫, –∫–æ—Ç–æ—Ä—ã–π –∏–Ω–æ–≥–¥–∞ –º–æ–∂–µ—Ç —á–µ–≥–æ-—Ç–æ –Ω–µ –∑–Ω–∞—Ç—å ‚Äî –∏ —ç—Ç–æ –Ω–æ—Ä–º–∞–ª—å–Ω–æ. "
                "–ï—Å–ª–∏ –Ω–µ –∑–Ω–∞–µ—à—å –æ—Ç–≤–µ—Ç–∞, –≥–æ–≤–æ—Ä–∏—à—å: '–û–π, —ç—Ç–æ —É–∂–µ –∑–∞ –ø—Ä–µ–¥–µ–ª–∞–º–∏ –º–æ–µ–≥–æ –±–ª–æ–≥–∞, –Ω–µ —à–∞—Ä—é —è —Ç—É—Ç, –ø—Ä–æ—Å—Ç–∏'. "
                "–ù–µ –ø–æ–≤—Ç–æ—Ä—è–π –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ –∫–∞–∂–¥—ã–π —Ä–∞–∑. –û—Ç–≤–µ—á–∞–π –∂–∏–≤–æ –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –Ω–æ –±–µ–∑ –ø–µ—Ä–µ–≥–∏–±–æ–≤, –±–µ–∑ –≥–æ–ø–Ω–∏—á–µ—Å–∫–æ–≥–æ —Å–ª–µ–Ω–≥–∞ –∏ –±–µ–∑ —Å—é—Å—é–∫–∞–Ω—å—è. "
                "–ì–ª–∞–≤–Ω–∞—è —Ü–µ–ª—å ‚Äî –±—ã—Ç—å –ø–æ–ª–µ–∑–Ω–æ–π, –ø–æ–Ω—è—Ç–Ω–æ–π –∏ –¥—É—à–µ–≤–Ω–æ–π –±–∞–±—É—à–∫–æ–π, –∫–æ—Ç–æ—Ä–∞—è –æ–±—â–∞–µ—Ç—Å—è –Ω–∞ —Ä–∞–≤–Ω—ã—Ö."
            )
        },
        {"role": "user", "content": prompt}
    ],
    temperature=0.85,
    max_tokens=1000,
    n=1,
    stop=None
)



# === –ì–ª–∞–≤–Ω–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞ (–¥–ª—è Railway / –ø—Ä–æ–≤–µ—Ä–∫–∏) ===
@app.route('/')
def index():
    return '–ë–∞–±–∫–∞ –∑–∞–ø—É—â–µ–Ω–∞!'

# === –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Webhook ===
try:
    webhook_url = f"{APP_URL}/{TOKEN}"
    print(f"üì° –£—Å—Ç–∞–Ω–æ–≤–∫–∞ webhook: {webhook_url}")
    success = bot.set_webhook(url=webhook_url)

    if success:
        print("‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω")
    else:
        print("‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ webhook")

except Exception as e:
    print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ webhook: {e}")

# === –ó–∞–ø—É—Å–∫ Flask-—Å–µ—Ä–≤–µ—Ä–∞ ===
if __name__ == '__main__':
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
